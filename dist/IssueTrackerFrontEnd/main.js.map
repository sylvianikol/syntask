{"version":3,"sources":["./src/app/components/task-details/task-details.component.html","./src/app/components/task-details/task-details.component.ts","./src/environments/environment.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.guard.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/models/user.model.ts","./src/app/app.module.ts","./src/app/components/add-task/add-task.component.ts","./src/app/components/add-task/add-task.component.html","./src/app/services/task.service.ts","./src/app/auth/auth.service.ts","./src/app/models/task.model.ts","./src/app/app-routing.module.ts","./src/app/components/task-list/task-list.component.ts","./src/app/components/task-list/task-list.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/shared/loading-spinner/loading-spinner.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div style=\"width: 400px; margin: auto;\">\n    <div *ngIf=\"currentTask\" class=\"edit-form\">\n      <h4>Tutorial</h4>\n      <form>\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"title\"\n            [(ngModel)]=\"currentTask.title\"\n            name=\"title\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <textarea\n            type=\"text\"\n            class=\"form-control\"\n            id=\"description\"\n            [(ngModel)]=\"currentTask.description\"\n            name=\"description\"\n          ></textarea>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"priority\">Priority</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"priority\"\n            [(ngModel)]=\"currentTask.priority\"\n            name=\"priority\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label><strong>Status:</strong></label>\n          {{ currentTask.completed ? \"Completed\" : \"Pending\" }}\n        </div>\n      </form>\n  \n      <button\n        class=\"badge badge-primary mr-2\"\n        *ngIf=\"currentTask.completed\"\n        (click)=\"updateCompleted(false)\"\n      >\n        Pending\n      </button>\n      <button\n        *ngIf=\"!currentTask.completed\"\n        class=\"badge badge-primary mr-2\"\n        (click)=\"updateCompleted(true)\"\n      >\n        Completed\n      </button>\n  \n      <button class=\"badge badge-danger mr-2\" (click)=\"deleteTask()\">\n        Delete\n      </button>\n  \n      <button\n        type=\"submit\"\n        class=\"badge badge-success\"\n        (click)=\"updateTask()\"\n      >\n        Update\n      </button>\n      <p>{{ message }}</p>\n    </div>\n  \n    <div *ngIf=\"!currentTask\">\n      <br />\n      <p>Cannot access this Task...</p>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/services/task.service';\n\n@Component({\n  selector: 'app-task-details',\n  templateUrl: './task-details.component.html',\n  styleUrls: ['./task-details.component.css']\n})\nexport class TaskDetailsComponent implements OnInit {\n\n  currentTask!: Task;\n  message = '';\n\n  constructor(\n    private taskService: TaskService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.message = '';\n    this.getTask(this.route.snapshot.paramMap.get('id'));\n  }\n\n  getTask(id: any): void {\n    this.taskService.get(id)\n      .subscribe(\n       (data: Task) => {\n          this.currentTask = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateCompleted(status: boolean): void {\n    const data = {\n      title: this.currentTask.title,\n      description: this.currentTask.description,\n      priority: this.currentTask.priority,\n      developerId: this.currentTask.developerId,\n      completed: status\n    };\n\n    this.taskService.update(this.currentTask.id, data)\n      .subscribe(\n        response => {\n          this.currentTask.completed = status;\n          console.log(response);\n          this.message = 'The task was Completed!';\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateTask(): void {\n    this.taskService.update(this.currentTask.id, this.currentTask)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = 'The task was updated successfully!';\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n\n  deleteTask(): void {\n    this.taskService.delete(this.currentTask.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['api/tasks']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  isLoginMode = true;\n  isLoading = false;\n  error!: string;\n  message!: string;\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSwitchMode() {\n    this.error = '';\n    this.message = '';\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    this.error = '';\n    this.message = '';\n\n    if (!form.valid) return;\n\n    const email = form.value.email;\n    const password = form.value.password;\n    \n    this.isLoading = true; \n    \n    let authObservable = new Observable<any>();\n\n    if (this.isLoginMode) {\n      authObservable = this.authService.login(email, password);\n    } else {\n      const username = form.value.username;\n      authObservable = this.authService.signUp(username, email, password);  \n    }\n\n    authObservable.subscribe(resData => {\n      console.log(resData);\n      this.isLoading = false;\n      this.isLoginMode = true;\n\n      if (resData.message) {\n        this.message = resData.message;\n      }\n\n      if (resData.messageResponse) {\n        this.message = resData.messageResponse.message;\n      }\n      \n\n    }, errorMessage => {  \n      console.log(errorMessage); \n      this.error = errorMessage;\n      this.isLoading = false;\n    });\n\n    form.reset();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <div class=\"alert alert-danger\" *ngIf=\"error\">\n            <span>{{ error }}</span>\n        </div>\n        <div class=\"alert alert-success\" *ngIf=\"message\">\n            <span>{{ message }}</span>\n        </div>\n        <div *ngIf=\"isLoading\">\n            <app-loading-spinner></app-loading-spinner>\n        </div>\n        <form #authForm=\"ngForm\" \n             (ngSubmit)=\"onSubmit(authForm)\"\n             *ngIf=\"!isLoading\">\n            \n            <div class=\"form-group\" *ngIf=\"!isLoginMode\">\n                <label for=\"username\">Username\n                    <input \n                        type=\"text\" \n                        id=\"username\" \n                        class=\"form-control\"\n                        ngModel\n                        name=\"username\"\n                        required>\n                </label>\n            </div>\n            \n            <div class=\"form-group\">\n                <label for=\"email\">Email\n                    <input \n                        type=\"email\" \n                        id=\"email\" \n                        class=\"form-control\"\n                        ngModel\n                        name=\"email\"\n                        required\n                        email>\n                </label>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password\n                    <input\n                        type=\"password\" \n                        id=\"password\" \n                        class=\"form-control\"\n                        ngModel\n                        name=\"password\"\n                        required\n                        minlength=\"3\">\n                </label>\n            </div>\n            <div class=\"btn-toolbar\">\n                <button \n                    class=\"btn btn-primary m-1\"\n                    type=\"submit\"\n                    [disabled]=\"!authForm.valid\">\n                        {{ isLoginMode ? 'Login' : 'Sign Up' }}\n                </button>\n                <button \n                    class=\"btn btn-primary m-1\" \n                    (click)=\"onSwitchMode()\"\n                    type=\"button\">\n                        Switch to {{ isLoginMode ? 'Sign Up' : 'Login' }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, router: RouterStateSnapshot) : boolean | Promise<boolean> | Observable<boolean> {\r\n        return this.authService.user\r\n                .pipe(map(user => {\r\n                    return !!user;\r\n                })); \r\n    }\r\n}","<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">Issue Tracker</a>\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"tasks\" class=\"nav-link\">Tasks</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n        <a routerLink=\"tasks/add\" class=\"nav-link\">Add</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\n        <a routerLink=\"auth\" class=\"nav-link\">Login / Sign Up</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n        <a class=\"nav-link\" style=\"cursor: pointer;\">Logout</a>\n      </li>\n    </div>\n  </nav>\n\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'Issue Tracker';\n\n  private userSubscription!: Subscription;\n  isLoggedIn = false;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.userSubscription = this.authService.user\n      .subscribe(user => {\n        this.isLoggedIn = !user ? false : true; \n        // this.isLoggedIn = !!user\n      });\n  }\n\n  ngOnDestroy() {\n    this.userSubscription.unsubscribe();\n  }\n}\n","export class User {\n    constructor(\n        public id: string, \n        public email: string, \n        public username: string,\n        public roles: [],\n        private _token: string,\n        private _tokenExpirationDate: Date) {} \n\n    get token() {\n        \n        if (this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\n            return null;\n        }\n\n        return this._token;\n    }\n}","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddTaskComponent } from './components/add-task/add-task.component';\nimport { TaskDetailsComponent } from './components/task-details/task-details.component';\nimport { TaskListComponent } from './components/task-list/task-list.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddTaskComponent,\n    TaskDetailsComponent,\n    TaskListComponent,\n    AuthComponent,\n    LoadingSpinnerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/services/task.service';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent implements OnInit {\n\n  task = {\n    title: '',\n    description: '',\n    priority: '',\n    completed: false\n  };\n\n  submitted = false;\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit(): void {\n  }\n\n  saveTask(): void {\n    const data = {\n      title: this.task.title,\n      description: this.task.description,\n      priority: this.task.priority,\n    };\n\n    this.taskService.create(data)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  newTask(): void {\n    this.submitted = false;\n    this.task = new Task('', '', '', '', new Date(Date.now()), '', false);\n  }\n\n\n}\n","<div style=\"width: 400px; margin: auto;\">\n    <div class=\"submit-form\">\n      \n      <div *ngIf=\"!submitted\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"title\"\n            required\n            [(ngModel)]=\"task.title\"\n            name=\"title\"\n          />\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <textarea\n            class=\"form-control\"\n            id=\"description\"\n            required\n            [(ngModel)]=\"task.description\"\n            name=\"description\"\n          ></textarea>\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"priority\">Priority</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"priority\"\n            required\n            [(ngModel)]=\"task.priority\"\n            name=\"priority\"\n          />\n        </div>\n\n        <button (click)=\"saveTask()\" class=\"btn btn-success\">Submit</button>\n      </div>\n  \n      <div *ngIf=\"submitted\">\n        <h4>Task submitted successfully!</h4>\n        <button class=\"btn btn-success\" (click)=\"newTask()\">Add</button>\n      </div>\n    </div>\n  </div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { exhaustMap, take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { User } from '../models/user.model';\n\nconst baseUrl = 'http://localhost:8080/tasks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) { }\n\n  getAll(): Observable<any> {\n    return this.authService.user.pipe(\n      take(1), \n      exhaustMap(user => {\n        return this.http.get(baseUrl, this.requestOptions(user));\n      })\n    );\n  }\n\n  get(id: string): Observable<any> {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n\n    // take(n) only takes n values from the observable\n    // and automatically unsubscribes\n\n    // exhaustMap() waits for the 1st observable to complete,\n    // which will happen after take(n)\n    return this.authService.user.pipe(\n      take(1), \n      exhaustMap(user => {\n        return this.http.post(`${baseUrl}/add`, data, this.requestOptions(user));\n      })\n    );\n  }\n\n  update(id: string, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n\n  findByTitle(title: any): Observable<any> {\n    return this.http.get(`${baseUrl}?title=${title}`);\n  }\n\n  private requestOptions(user: User) {\n    \n    const headerDict = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + user.token,\n    }\n    \n    return {                                                                                                                                                                                 \n      headers: new HttpHeaders(headerDict), \n    };\n  }\n}\n","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject, throwError } from \"rxjs\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { User } from \"../models/user.model\";\n\nconst baseUrl = 'http://localhost:8080';\n\n\n@Injectable({providedIn: 'root'})\nexport class AuthService {\n\n    // BehaviorSubject gives immediate access to the prev emitted value\n    // this way we get access to the current user\n    user = new BehaviorSubject<User>(null!); \n\n    constructor(\n        private http: HttpClient,\n        private router: Router\n    ) {}\n    \n    signUp(username: string, email: string, password: string) {\n        return this.http.post<any>(`${baseUrl}/sign-up`,\n        {   \n            username: username,\n            email: email,\n            password: password\n        }\n        ).pipe(\n            catchError(this.handleError), \n            tap(resData => { \n                const user = new User(\n                    resData.id,\n                    resData.email,\n                    resData.username,\n                    resData.roles,\n                    resData.accessToken,\n                    resData.expirationDate \n                );\n\n                this.user.next(user);\n                this.router.navigate(['/tasks']);\n            })\n        );\n    }\n\n\n    login(email: string, password: string) {\n        return this.http.post<any>(`${baseUrl}/signin`,\n            {   \n                email: email,\n                password: password\n            }\n        ).pipe(\n            catchError(this.handleError), \n            tap(resData => { \n                const user = new User(\n                    resData.id,\n                    resData.email,\n                    resData.username,\n                    resData.roles,\n                    resData.accessToken,\n                    resData.expirationDate \n                );\n\n                this.user.next(user);\n                this.router.navigate(['/tasks']);\n            })\n        );\n    }\n\n    handleError(errorRes: HttpErrorResponse) {\n        console.log(errorRes.error.error);\n        let errorMessage = 'An uknown error!';\n\n        if (!errorRes.error || !errorRes.error.error) {\n            return throwError(errorMessage);\n        }\n\n        switch(errorRes.error.error) {\n            case 'EMAIL_ALREADY_EXISTS': \n                errorMessage = 'This email already exists!';\n            break;\n            case 'Forbidden': \n                errorMessage = 'Incorrect email or password!';\n            break;\n        }\n\n        return throwError(errorMessage);\n    }\n}","export class Task {\n    id: string;\n    title: string;\n    description: string;\n    priority: string;\n    createdOn: Date;\n    developerId: string;\n    completed: boolean;\n\n    constructor(\n        id: string,\n        title: string, \n        description: string, \n        priority: string,\n        createdOn: Date,\n        developerId: string, \n        completed: boolean\n    ) {\n        this.id = id;\n        this.title = title;\n        this.description = description;\n        this.priority = priority;\n        this.createdOn = createdOn;\n        this.developerId = developerId;\n        this.completed = completed;\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AddTaskComponent } from './components/add-task/add-task.component';\nimport { TaskDetailsComponent } from './components/task-details/task-details.component';\nimport { TaskListComponent } from './components/task-list/task-list.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'tasks', pathMatch: 'full' },\n  { path: 'tasks/add', component: AddTaskComponent, canActivate: [AuthGuard] },\n  { path: 'tasks/:id', component: TaskDetailsComponent },\n  { path: 'tasks', component: TaskListComponent },\n  { path: 'auth', component: AuthComponent }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/services/task.service';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n  \n  tasks!: Task[];\n  currentTask!: Task;\n  currentIndex = -1;\n  title = '';\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit(): void {\n    this.fetchTasks();\n  }\n\n  fetchTasks(): void {\n    this.taskService.getAll()\n      .subscribe(\n        (data: Task[]) => {\n          this.tasks = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList(): void {\n    this.fetchTasks();\n    this.currentTask = new Task('', '', '', '', new Date(Date.now()), '', false);\n    this.currentIndex = -1;\n  }\n\n  setActiveTask(task: Task, index: number): void {\n    this.currentTask = task;\n    this.currentIndex = index;\n  }\n\n  removeAllTasks(): void {\n    this.taskService.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.refreshList();\n        }, \n        error => {\n          console.log(error);\n        });\n  }\n\n  searchTitle(): void {\n    this.taskService.findByTitle(this.title)\n      .subscribe(\n        data => {\n          this.tasks = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","<div class=\"list row\">\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Search by title\"\n          [(ngModel)]=\"title\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            (click)=\"searchTitle()\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <h4>Tasks List</h4>\n      <ul class=\"list-group\">\n        <li\n          class=\"list-group-item\"\n          *ngFor=\"let task of tasks; let i = index\"\n          [class.active]=\"i == currentIndex\"\n          (click)=\"setActiveTask(task, i)\" \n          style=\"cursor: pointer;\"\n        >\n          {{ task.title }}\n        </li>\n      </ul>\n  \n      <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllTasks()\">\n        Remove All\n      </button>\n    </div>\n    <div class=\"col-md-6\">\n      <div *ngIf=\"currentTask\">\n        <h4>Task</h4>\n        <div>\n          <label><strong>Title:</strong></label> {{ currentTask.title }}\n        </div>\n        <div>\n          <label><strong>Description:</strong></label>\n          {{ currentTask.description }}\n        </div>\n        <div>\n          <label><strong>Created on:</strong></label>\n          {{ currentTask.createdOn }}\n        </div>\n        <div>\n          <label><strong>Priority:</strong></label>\n          {{ currentTask.priority }}\n        </div>\n        <div>\n          <label><strong>Developer ID:</strong></label>\n          {{ currentTask.developerId \n              ? currentTask.developerId \n              : \"Unassigned\" }}\n        </div>\n        <div>\n          <label><strong>Status:</strong></label>\n          {{ currentTask.completed ? \"Completed\" : \"Pending\" }}\n        </div>\n  \n        <a class=\"badge badge-warning\" routerLink=\"/tasks/{{ currentTask.id }}\">\n          Edit\n        </a>\n      </div>\n  \n      <div *ngIf=\"!currentTask\">\n        <br />\n        <p>Please click on a Task...</p>\n      </div>\n    </div>\n  </div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-loading-spinner',\n    template: '<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>',\n    styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent {\n    \n}"],"sourceRoot":"webpack:///"}